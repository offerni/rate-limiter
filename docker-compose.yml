version: "3.8"

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - rate-limiter-network

  rate-limiter:
    build: .
    ports:
      - "8080:8080"
    environment:
      # IP rate limiting (requests per second)
      - IP_RATE_LIMIT=10
      - IP_BLOCK_TIME=300

      # Token rate limiting (format: TOKEN_<token>_LIMIT=<limit>)
      - TOKEN_ABC123_LIMIT=100
      - TOKEN_ABC123_BLOCK_TIME=300
      - TOKEN_XYZ789_LIMIT=50
      - TOKEN_XYZ789_BLOCK_TIME=600

      # Server configuration
      - SERVER_PORT=8080
      
      # Redis configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
    volumes:
      - ./.env:/root/.env:ro
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - rate-limiter-network

volumes:
  redis-data:

networks:
  rate-limiter-network:
    driver: bridge
